<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1029.2,9412.8" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:uga="clr-namespace:UiPath.GSuite.Activities;assembly=UiPath.GSuite.Activities" xmlns:ugad="clr-namespace:UiPath.GSuite.Activities.Drive;assembly=UiPath.GSuite.Activities" xmlns:ugade="clr-namespace:UiPath.GSuite.Activities.Drive.Enums;assembly=UiPath.GSuite.Activities" xmlns:ugas="clr-namespace:UiPath.GSuite.Activities.Sheets;assembly=UiPath.GSuite.Activities" xmlns:ugdm="clr-namespace:UiPath.GSuite.Drive.Models;assembly=UiPath.GSuite" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:usau="clr-namespace:UiPath.Shared.Activities.Utils;assembly=UiPath.GSuite.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.GSuite.Activities.Sheets</x:String>
      <x:String>UiPath.GSuite.Activities.Sheets.Enums</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.GSuite.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.GSuite.Activities.Drive.Enums</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.GSuite.Activities.Drive.Filters</x:String>
      <x:String>UiPath.GSuite.Drive.Models</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.GSuite.Activities.Drive</x:String>
      <x:String>Google.Apis.Drive.v3.Data</x:String>
      <x:String>Google.Apis.Requests</x:String>
      <x:String>UiPath.GSuite.Activities.Contracts</x:String>
      <x:String>UiPath.GSuite.Sheets.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.GSuite</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Google.Apis.Drive.v3</AssemblyReference>
      <AssemblyReference>Google.Apis</AssemblyReference>
      <AssemblyReference>Google.Apis.Core</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow1</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow2</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow3</AssemblyReference>
      <AssemblyReference>GlobalVariablesT1PNoYwrqg</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="840,9347.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="PayrollSheets" />
      <Variable x:TypeArguments="sd:DataTable" Name="TherapyData" />
      <Variable x:TypeArguments="sd:DataTable" Name="Therapists" />
      <Variable x:TypeArguments="x:Decimal" Default="0" Name="BillableTime" />
      <Variable x:TypeArguments="x:Decimal" Default="0" Name="NonBillableTime" />
      <Variable x:TypeArguments="ugdm:GDriveRemoteItem[]" Name="Files" />
      <Variable x:TypeArguments="x:String" Name="PayrollSheetID" />
      <Variable x:TypeArguments="x:String" Name="PaycomSheetID" />
      <Variable x:TypeArguments="x:Int32" Default="2" Name="CurrentIndex" />
      <Variable x:TypeArguments="x:String" Name="EmployeeSheetID" />
      <Variable x:TypeArguments="sd:DataTable" Name="EmployeeNumbers" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[new Dictionary(of String, String)]" Name="EmployeeDictionary" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ugad:GoogleDriveApplicationScope ConnectionAccountName="{x:Null}" ConnectionId="{x:Null}" ContinueOnError="{x:Null}" Timeout="{x:Null}" Account="andrew.randolphap@gmail.com" DisplayName="Use Google Drive" sap:VirtualizedContainerService.HintSize="778,408.4" sap2010:WorkflowViewState.IdRef="GoogleDriveApplicationScope_2" UseConnectionService="False" UserEmail="andrew.randolphap@gmail.com">
      <ugad:GoogleDriveApplicationScope.Body>
        <ActivityAction x:TypeArguments="ugad:IGoogleDriveTarget">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ugad:IGoogleDriveTarget" Name="GoogleDrive" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="450,265.6" sap2010:WorkflowViewState.IdRef="Sequence_13">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <uga:GetFileListConnections ConnectionAccountName="{x:Null}" Filter="{x:Null}" ManualEntryLocation="{x:Null}" ConnectionId="1f245e4a-25b5-4a63-8584-59eb2893e8ac" DisplayName="Get File List" sap:VirtualizedContainerService.HintSize="388,154.4" sap2010:WorkflowViewState.IdRef="GetFileListConnections_1" LocationInputMode="Browse" MaxResults="200" Result="[Files]" StarredOnly="False" UseConnectionService="True">
              <uga:GetFileListConnections.BrowserLocation>
                <InArgument x:TypeArguments="x:String" />
              </uga:GetFileListConnections.BrowserLocation>
              <uga:GetFileListConnections.FolderIdBackup>
                <usau:BackupSlot x:TypeArguments="ugade:EDriveMode" StoredValue="Browse">
                  <usau:BackupSlot.BackupValues>
                    <scg:Dictionary x:TypeArguments="ugade:EDriveMode, scg:List(x:Object)" />
                  </usau:BackupSlot.BackupValues>
                </usau:BackupSlot>
              </uga:GetFileListConnections.FolderIdBackup>
              <uga:GetFileListConnections.LocationFriendlyName>
                <InArgument x:TypeArguments="x:String" />
              </uga:GetFileListConnections.LocationFriendlyName>
            </uga:GetFileListConnections>
          </Sequence>
        </ActivityAction>
      </ugad:GoogleDriveApplicationScope.Body>
      <ugad:GoogleDriveApplicationScope.CredentialID>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </ugad:GoogleDriveApplicationScope.CredentialID>
      <ugad:GoogleDriveApplicationScope.CredentialSecret>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </ugad:GoogleDriveApplicationScope.CredentialSecret>
    </ugad:GoogleDriveApplicationScope>
    <ui:ForEach x:TypeArguments="ugdm:GDriveRemoteItem" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="778,1563" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Files.ToList()]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="ugdm:GDriveRemoteItem">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ugdm:GDriveRemoteItem" Name="file" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="693,1377" sap2010:WorkflowViewState.IdRef="Sequence_14">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[file.FullName.Contains(&quot;Payroll&quot;) AND file.Uri.Contains(&quot;spreadsheet&quot;)]" sap:VirtualizedContainerService.HintSize="651,1289" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="465,189" sap2010:WorkflowViewState.IdRef="Sequence_15">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[PayrollSheetID]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[file.ID.ToString()]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="617,918" sap2010:WorkflowViewState.IdRef="Sequence_16">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[file.FullName.Contains(&quot;PAYCOM&quot;)]" sap:VirtualizedContainerService.HintSize="575,830" sap2010:WorkflowViewState.IdRef="If_4">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="465,189" sap2010:WorkflowViewState.IdRef="Sequence_17">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                          <ui:MultipleAssign.AssignOperations>
                            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">[PaycomSheetID]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">[file.ID.ToString()]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                            </scg:List>
                          </ui:MultipleAssign.AssignOperations>
                        </ui:MultipleAssign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="541,459" sap2010:WorkflowViewState.IdRef="Sequence_18">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[file.FullName.Contains(&quot;Employee ID&quot;)]" sap:VirtualizedContainerService.HintSize="499,371" sap2010:WorkflowViewState.IdRef="If_5">
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="465,189" sap2010:WorkflowViewState.IdRef="Sequence_19">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
                                <ui:MultipleAssign.AssignOperations>
                                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:String">[EmployeeSheetID]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:String">[file.ID.ToString()]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                  </scg:List>
                                </ui:MultipleAssign.AssignOperations>
                              </ui:MultipleAssign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_20">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ugas:GoogleSheetsApplicationScope ConnectionAccountName="{x:Null}" ConnectionId="{x:Null}" ContinueOnError="{x:Null}" FileId="{x:Null}" Filename="{x:Null}" ParentFolderId="{x:Null}" ParentFolderPath="{x:Null}" SpreadsheetName="{x:Null}" Timeout="{x:Null}" Account="andrew.randolphap@gmail.com" Action="UseExisting" DisplayName="Use Google Spreadsheet" sap:VirtualizedContainerService.HintSize="778,738" sap2010:WorkflowViewState.IdRef="GoogleSheetsApplicationScope_3" Mode="EnterId" SpreadsheetId="[PayrollSheetID]" UseConnectionService="False" UserEmail="andrew.randolphap@gmail.com">
      <ugas:GoogleSheetsApplicationScope.Body>
        <ActivityAction x:TypeArguments="ugas:IGoogleSheetTarget">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ugas:IGoogleSheetTarget" Name="Spreadsheet" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="450,456" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <uga:GetSheets ContinueOnError="{x:Null}" SpreadsheetId="{x:Null}" AuthScopesInvalid="False" DisplayName="Get Sheets" GoogleSpreadsheet="[Spreadsheet]" sap:VirtualizedContainerService.HintSize="388,87" sap2010:WorkflowViewState.IdRef="GetSheets_2" Result="[PayrollSheets]" />
            <uga:ReadRange ContinueOnError="{x:Null}" Range="{x:Null}" SpreadsheetId="{x:Null}" AuthScopesInvalid="False" DisplayName="Read Range" GoogleSpreadsheet="[Spreadsheet]" sap:VirtualizedContainerService.HintSize="388,218" sap2010:WorkflowViewState.IdRef="ReadRange_2" IncludeHeaders="True" Result="[TherapyData]" SheetName="[PayrollSheets.First()]" />
          </Sequence>
        </ActivityAction>
      </ugas:GoogleSheetsApplicationScope.Body>
      <ugas:GoogleSheetsApplicationScope.CredentialID>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </ugas:GoogleSheetsApplicationScope.CredentialID>
      <ugas:GoogleSheetsApplicationScope.CredentialSecret>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </ugas:GoogleSheetsApplicationScope.CredentialSecret>
    </ugas:GoogleSheetsApplicationScope>
    <ugas:GoogleSheetsApplicationScope ConnectionAccountName="{x:Null}" ConnectionId="{x:Null}" ContinueOnError="{x:Null}" FileId="{x:Null}" Filename="{x:Null}" ParentFolderId="{x:Null}" ParentFolderPath="{x:Null}" Timeout="{x:Null}" Account="andrew.randolphap@gmail.com" Action="UseExisting" DisplayName="Use Google Spreadsheet" sap:VirtualizedContainerService.HintSize="778,915" sap2010:WorkflowViewState.IdRef="GoogleSheetsApplicationScope_2" Mode="EnterId" SpreadsheetId="[PaycomSheetID]" SpreadsheetName="File Import Format PAYCOM" UseConnectionService="False" UserEmail="andrew.randolphap@gmail.com">
      <ugas:GoogleSheetsApplicationScope.Body>
        <ActivityAction x:TypeArguments="ugas:IGoogleSheetTarget">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ugas:IGoogleSheetTarget" Name="Spreadsheet" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="450,633" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd:DataTable" Name="PaycomData" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <uga:GetSheets ContinueOnError="{x:Null}" SpreadsheetId="{x:Null}" AuthScopesInvalid="False" DisplayName="Get Sheets" GoogleSpreadsheet="[Spreadsheet]" sap:VirtualizedContainerService.HintSize="388,87" sap2010:WorkflowViewState.IdRef="GetSheets_3" Result="[PayrollSheets]" />
            <uga:ClearRange ContinueOnError="{x:Null}" SpreadsheetId="{x:Null}" AuthScopesInvalid="False" DisplayName="Clear Range" GoogleSpreadsheet="[Spreadsheet]" sap:VirtualizedContainerService.HintSize="388,137" sap2010:WorkflowViewState.IdRef="ClearRange_1" Range="A2:C500" SheetName="[PayrollSheets.First()]" />
            <uga:ReadRange ContinueOnError="{x:Null}" Range="{x:Null}" SpreadsheetId="{x:Null}" AuthScopesInvalid="False" DisplayName="Read Range" GoogleSpreadsheet="[Spreadsheet]" sap:VirtualizedContainerService.HintSize="388,218" sap2010:WorkflowViewState.IdRef="ReadRange_3" IncludeHeaders="True" Result="[PaycomData]" SheetName="[PayrollSheets.First()]" />
          </Sequence>
        </ActivityAction>
      </ugas:GoogleSheetsApplicationScope.Body>
      <ugas:GoogleSheetsApplicationScope.CredentialID>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </ugas:GoogleSheetsApplicationScope.CredentialID>
      <ugas:GoogleSheetsApplicationScope.CredentialSecret>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </ugas:GoogleSheetsApplicationScope.CredentialSecret>
    </ugas:GoogleSheetsApplicationScope>
    <ugas:GoogleSheetsApplicationScope ConnectionAccountName="{x:Null}" ConnectionId="{x:Null}" ContinueOnError="{x:Null}" FileId="{x:Null}" Filename="{x:Null}" ParentFolderId="{x:Null}" ParentFolderPath="{x:Null}" SpreadsheetName="{x:Null}" Timeout="{x:Null}" Account="andrew.randolphap@gmail.com" Action="UseExisting" DisplayName="Use Google Spreadsheet" sap:VirtualizedContainerService.HintSize="778,778" sap2010:WorkflowViewState.IdRef="GoogleSheetsApplicationScope_4" Mode="EnterId" SpreadsheetId="[EmployeeSheetID]" UseConnectionService="False" UserEmail="andrew.randolphap@gmail.com">
      <ugas:GoogleSheetsApplicationScope.Body>
        <ActivityAction x:TypeArguments="ugas:IGoogleSheetTarget">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ugas:IGoogleSheetTarget" Name="Spreadsheet" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="450,456" sap2010:WorkflowViewState.IdRef="Sequence_21">
            <Sequence.Variables>
              <Variable x:TypeArguments="s:String[]" Name="EmployeeSheets" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <uga:GetSheets ContinueOnError="{x:Null}" SpreadsheetId="{x:Null}" AuthScopesInvalid="False" DisplayName="Get Sheets" GoogleSpreadsheet="[Spreadsheet]" sap:VirtualizedContainerService.HintSize="388,87" sap2010:WorkflowViewState.IdRef="GetSheets_4" Result="[EmployeeSheets]" />
            <uga:ReadRange ContinueOnError="{x:Null}" Range="{x:Null}" SpreadsheetId="{x:Null}" AuthScopesInvalid="False" DisplayName="Read Range" GoogleSpreadsheet="[Spreadsheet]" sap:VirtualizedContainerService.HintSize="388,218" sap2010:WorkflowViewState.IdRef="ReadRange_4" IncludeHeaders="True" Result="[EmployeeNumbers]" SheetName="[EmployeeSheets.First()]" />
          </Sequence>
        </ActivityAction>
      </ugas:GoogleSheetsApplicationScope.Body>
      <ugas:GoogleSheetsApplicationScope.CredentialID>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </ugas:GoogleSheetsApplicationScope.CredentialID>
      <ugas:GoogleSheetsApplicationScope.CredentialSecret>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </ugas:GoogleSheetsApplicationScope.CredentialSecret>
    </ugas:GoogleSheetsApplicationScope>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[EmployeeNumbers]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="778,393" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="ID" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="450,276" sap2010:WorkflowViewState.IdRef="Sequence_23">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="EmployeeDictionary.Add(ID.Item(&quot;Name&quot;).ToString(), ID.Item(&quot;Value&quot;).ToString())" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="388,165" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
              <ui:InvokeCode.Arguments>
                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="EmployeeDictionary">[EmployeeDictionary]</InOutArgument>
                <InArgument x:TypeArguments="sd:DataRow" x:Key="ID">[ID]</InArgument>
              </ui:InvokeCode.Arguments>
            </ui:InvokeCode>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[TherapyData]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="778,310" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_25">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_6">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("Employee ID")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">[EmployeeDictionary.GetValueOrDefault(CurrentRow.Item("Staff Member").ToString())]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <Assign sap:VirtualizedContainerService.HintSize="778,81" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="sd:DataTable">[Therapists]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sd:DataTable">[TherapyData.DefaultView.ToTable(true, "Employee ID")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[Therapists]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="778,3730" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Therapist" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="744,3614" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="682,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:Decimal">[BillableTime]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:Decimal">0</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:Decimal">[NonBillableTime]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:Decimal">0</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
            </ui:MultipleAssign>
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[TherapyData]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="682,1018" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Row" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="648,902" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[Row.Item(&quot;Is Billable&quot;).ToString().Trim() = &quot;Yes&quot; AND Row.Item(&quot;Employee ID&quot;).ToString().Trim() = Therapist.Item(0).ToString().Trim()]" sap:VirtualizedContainerService.HintSize="586,791" sap2010:WorkflowViewState.IdRef="If_1">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="476,169" sap2010:WorkflowViewState.IdRef="Sequence_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_2">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Decimal">[BillableTime]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Decimal">[BillableTime + Decimal.Parse(Row.Item("Hours Worked").ToString())]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="552,440" sap2010:WorkflowViewState.IdRef="Sequence_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[Row.Item(&quot;Is Billable&quot;).ToString().Trim() = &quot;No&quot; AND Row.Item(&quot;Employee ID&quot;).ToString().Trim() = Therapist.Item(0).ToString().Trim()]" sap:VirtualizedContainerService.HintSize="510,352" sap2010:WorkflowViewState.IdRef="If_2">
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_3">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Decimal">[NonBillableTime]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Decimal">[NonBillableTime + Decimal.Parse(Row.Item("Hours Worked").ToString())]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
            </ui:ForEachRow>
            <uga:WriteCellConnections BrowserItemFriendlyName="{x:Null}" BrowserItemId="{x:Null}" ConnectionAccountName="{x:Null}" Spreadsheet="{x:Null}" Cell="[&quot;A&quot;+CurrentIndex.ToString()]" ConnectionId="d2c42e22-1b71-4cd7-95d8-16747493afe5" DisplayName="Write Billable EE Code" sap:VirtualizedContainerService.HintSize="682,305" sap2010:WorkflowViewState.IdRef="WriteCellConnections_1" ItemSelectionMode="UrlOrId" ManualEntrySpreadsheetId="[PaycomSheetID]" RangeLocation="[PayrollSheets.First()]" UseConnectionService="True" WhatToWrite="[Therapist.Item(0).ToString().Trim()]">
              <uga:WriteCellConnections.FileIdBackup>
                <usau:BackupSlot x:TypeArguments="ugade:EDriveItemMode" StoredValue="UrlOrId">
                  <usau:BackupSlot.BackupValues>
                    <scg:List x:TypeArguments="x:Object" x:Key="Browse" Capacity="2">
                      <x:Null />
                      <x:Null />
                    </scg:List>
                  </usau:BackupSlot.BackupValues>
                </usau:BackupSlot>
              </uga:WriteCellConnections.FileIdBackup>
            </uga:WriteCellConnections>
            <uga:WriteCellConnections BrowserItemFriendlyName="{x:Null}" BrowserItemId="{x:Null}" ConnectionAccountName="{x:Null}" Spreadsheet="{x:Null}" Cell="[&quot;B&quot;+CurrentIndex.ToString()]" ConnectionId="d2c42e22-1b71-4cd7-95d8-16747493afe5" DisplayName="Write Billable EE Code" sap:VirtualizedContainerService.HintSize="682,305" sap2010:WorkflowViewState.IdRef="WriteCellConnections_6" ItemSelectionMode="UrlOrId" ManualEntrySpreadsheetId="[PaycomSheetID]" RangeLocation="[PayrollSheets.First()]" UseConnectionService="True" WhatToWrite="[&quot;R&quot;]">
              <uga:WriteCellConnections.FileIdBackup>
                <usau:BackupSlot x:TypeArguments="ugade:EDriveItemMode" StoredValue="UrlOrId">
                  <usau:BackupSlot.BackupValues>
                    <scg:List x:TypeArguments="x:Object" x:Key="Browse" Capacity="2">
                      <x:Null />
                      <x:Null />
                    </scg:List>
                  </usau:BackupSlot.BackupValues>
                </usau:BackupSlot>
              </uga:WriteCellConnections.FileIdBackup>
            </uga:WriteCellConnections>
            <uga:WriteCellConnections BrowserItemFriendlyName="{x:Null}" BrowserItemId="{x:Null}" ConnectionAccountName="{x:Null}" Spreadsheet="{x:Null}" Cell="[&quot;C&quot;+CurrentIndex.ToString()]" ConnectionId="d2c42e22-1b71-4cd7-95d8-16747493afe5" DisplayName="Write Billable Hours" sap:VirtualizedContainerService.HintSize="682,305" sap2010:WorkflowViewState.IdRef="WriteCellConnections_2" ItemSelectionMode="UrlOrId" ManualEntrySpreadsheetId="[PaycomSheetID]" RangeLocation="[PayrollSheets.First()]" UseConnectionService="True" WhatToWrite="[BillableTime]">
              <uga:WriteCellConnections.FileIdBackup>
                <usau:BackupSlot x:TypeArguments="ugade:EDriveItemMode" StoredValue="UrlOrId">
                  <usau:BackupSlot.BackupValues>
                    <scg:List x:TypeArguments="x:Object" x:Key="Browse" Capacity="2">
                      <x:Null />
                      <x:Null />
                    </scg:List>
                  </usau:BackupSlot.BackupValues>
                </usau:BackupSlot>
              </uga:WriteCellConnections.FileIdBackup>
            </uga:WriteCellConnections>
            <Assign sap:VirtualizedContainerService.HintSize="682,81" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[CurrentIndex]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[CurrentIndex + 1]</InArgument>
              </Assign.Value>
            </Assign>
            <uga:WriteCellConnections BrowserItemFriendlyName="{x:Null}" BrowserItemId="{x:Null}" ConnectionAccountName="{x:Null}" Spreadsheet="{x:Null}" Cell="[&quot;A&quot;+CurrentIndex.ToString()]" ConnectionId="d2c42e22-1b71-4cd7-95d8-16747493afe5" DisplayName="Write NonBillable EE Code" sap:VirtualizedContainerService.HintSize="682,305" sap2010:WorkflowViewState.IdRef="WriteCellConnections_3" ItemSelectionMode="UrlOrId" ManualEntrySpreadsheetId="[PaycomSheetID]" RangeLocation="[PayrollSheets.First()]" UseConnectionService="True" WhatToWrite="[Therapist.Item(0).ToString().Trim()]">
              <uga:WriteCellConnections.FileIdBackup>
                <usau:BackupSlot x:TypeArguments="ugade:EDriveItemMode" StoredValue="UrlOrId">
                  <usau:BackupSlot.BackupValues>
                    <scg:List x:TypeArguments="x:Object" x:Key="Browse" Capacity="2">
                      <x:Null />
                      <x:Null />
                    </scg:List>
                  </usau:BackupSlot.BackupValues>
                </usau:BackupSlot>
              </uga:WriteCellConnections.FileIdBackup>
            </uga:WriteCellConnections>
            <uga:WriteCellConnections BrowserItemFriendlyName="{x:Null}" BrowserItemId="{x:Null}" ConnectionAccountName="{x:Null}" Spreadsheet="{x:Null}" Cell="[&quot;B&quot;+CurrentIndex.ToString()]" ConnectionId="d2c42e22-1b71-4cd7-95d8-16747493afe5" DisplayName="Write NonBillable EE Code" sap:VirtualizedContainerService.HintSize="682,305" sap2010:WorkflowViewState.IdRef="WriteCellConnections_7" ItemSelectionMode="UrlOrId" ManualEntrySpreadsheetId="[PaycomSheetID]" RangeLocation="[PayrollSheets.First()]" UseConnectionService="True" WhatToWrite="[&quot;NB2&quot;]">
              <uga:WriteCellConnections.FileIdBackup>
                <usau:BackupSlot x:TypeArguments="ugade:EDriveItemMode" StoredValue="UrlOrId">
                  <usau:BackupSlot.BackupValues>
                    <scg:List x:TypeArguments="x:Object" x:Key="Browse" Capacity="2">
                      <x:Null />
                      <x:Null />
                    </scg:List>
                  </usau:BackupSlot.BackupValues>
                </usau:BackupSlot>
              </uga:WriteCellConnections.FileIdBackup>
            </uga:WriteCellConnections>
            <uga:WriteCellConnections BrowserItemFriendlyName="{x:Null}" BrowserItemId="{x:Null}" ConnectionAccountName="{x:Null}" Spreadsheet="{x:Null}" Cell="[&quot;C&quot;+CurrentIndex.ToString()]" ConnectionId="d2c42e22-1b71-4cd7-95d8-16747493afe5" DisplayName="Write NonBillable Hours" sap:VirtualizedContainerService.HintSize="682,305" sap2010:WorkflowViewState.IdRef="WriteCellConnections_4" ItemSelectionMode="UrlOrId" ManualEntrySpreadsheetId="[PaycomSheetID]" RangeLocation="[PayrollSheets.First()]" UseConnectionService="True" WhatToWrite="[NonBillableTime]">
              <uga:WriteCellConnections.FileIdBackup>
                <usau:BackupSlot x:TypeArguments="ugade:EDriveItemMode" StoredValue="UrlOrId">
                  <usau:BackupSlot.BackupValues>
                    <scg:List x:TypeArguments="x:Object" x:Key="Browse" Capacity="2">
                      <x:Null />
                      <x:Null />
                    </scg:List>
                  </usau:BackupSlot.BackupValues>
                </usau:BackupSlot>
              </uga:WriteCellConnections.FileIdBackup>
            </uga:WriteCellConnections>
            <Assign sap:VirtualizedContainerService.HintSize="682,82" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[CurrentIndex]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[CurrentIndex + 1]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
  </Sequence>
</Activity>